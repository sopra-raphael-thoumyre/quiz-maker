{
  "root": true,
  "ignorePatterns": [
    "projects/**/*"
  ],
  "overrides": [
    {
      "files": [
        "*.ts"
      ],
      "parserOptions": {
        "project": [
          "tsconfig.json",
          "e2e/tsconfig.json"
        ],
        "createDefaultProgram": true
      },
      "extends": [
        "eslint:recommended",
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended"
      ],
      "rules": {
        "no-inferrable-types": "off",
        "default-param-last": "off",
        "no-empty-function": "off",
        "no-implied-eval": "off",
        "no-invalid-this": "off",
        "no-redeclare": "off",
        "no-throw-literal": "off",
        "require-await": "off",
        "no-shadow": "off",
        "brace-style": "off",
        "func-call-spacing": "off",
        "no-unused-vars": "off",
        "no-use-before-define": "off",
        "comma-dangle": "off",
        "comma-spacing": "off",
        "block-scoped-var": "error",
        "curly": "error",
        "default-case": "error",
        "default-case-last": "error",
        "eqeqeq": [
          "error",
          "always"
        ],
        "grouped-accessor-pairs": "error",
        "no-extend-native": "error",
        "no-extra-bind": "error",
        "no-floating-decimal": "error",
        "no-global-assign": "error",
        "no-implicit-globals": "error",
        "no-iterator": "error",
        "no-labels": "error",
        "no-lone-blocks": "error",
        "no-multi-spaces": "error",
        "no-new": "error",
        "no-new-func": "error",
        "no-proto": "error",
        "no-return-assign": "error",
        "no-self-compare": "error",
        "no-useless-catch": "error",
        "no-useless-return": "error",
        "prefer-promise-reject-errors": "error",
        "array-bracket-spacing": [
          "error",
          "never"
        ],
        "block-spacing": "error",
        "camelcase": "error",
        "comma-style": [
          "error",
          "last"
        ],
        "computed-property-spacing": [
          "error",
          "never"
        ],
        "key-spacing": [
          "error",
          {
            "beforeColon": false,
            "afterColon": true
          }
        ],
        "keyword-spacing": [
          "error",
          {
            "before": true,
            "after": true
          }
        ],
        "no-mixed-operators": "error",
        "no-multi-assign": "error",
        "no-trailing-spaces": "error",
        "no-whitespace-before-property": "error",
        "object-curly-spacing": [
          "error",
          "always"
        ],
        "one-var": [
          "error",
          "never"
        ],
        "operator-linebreak": [
          "error",
          "before"
        ],
        "quote-props": [
          "error",
          "consistent-as-needed"
        ],
        "quotes": [
          "error",
          "single",
          {
            "allowTemplateLiterals": true,
            "avoidEscape": true
          }
        ],
        "semi": "error",
        "semi-spacing": "error",
        "semi-style": [
          "error",
          "last"
        ],
        "space-before-blocks": "error",
        "space-before-function-paren": [
          "error",
          {
            "anonymous": "always",
            "named": "never",
            "asyncArrow": "always"
          }
        ],
        "space-in-parens": [
          "error",
          "never"
        ],
        "space-unary-ops": "error",
        "arrow-parens": [
          "error",
          "always"
        ],
        "arrow-spacing": "error",
        "no-confusing-arrow": "error",
        "no-var": "error",
        "prefer-const": "error",
        "@angular-eslint/component-selector": [
          "error",
          {
            "prefix": [
              "app",
              "quiz"
            ],
            "style": "kebab-case",
            "type": "element"
          }
        ],
        "@angular-eslint/directive-selector": [
          "error",
          {
            "prefix": "quiz",
            "style": "camelCase",
            "type": "attribute"
          }
        ],
        "@typescript-eslint/ban-ts-comment": "off",
        "@typescript-eslint/explicit-member-accessibility": [
          "error"
        ],
        "@typescript-eslint/typedef": [
          "error",
          {
            "arrayDestructuring": true,
            "arrowParameter": true,
            "memberVariableDeclaration": true,
            "objectDestructuring": true,
            "parameter": true,
            "propertyDeclaration": true,
            "variableDeclaration": true,
            "variableDeclarationIgnoreFunction": true
          }
        ],
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/explicit-function-return-type": [
          "error",
          {
            "allowExpressions": false,
            "allowTypedFunctionExpressions": true,
            "allowHigherOrderFunctions": true,
            "allowDirectConstAssertionInArrowFunctions": true,
            "allowConciseArrowFunctionExpressionsStartingWithVoid": false
          }
        ],
        "@typescript-eslint/no-inferrable-types": "off",
        "@typescript-eslint/default-param-last": "error",
        "@typescript-eslint/no-empty-function": "error",
        "@typescript-eslint/no-implied-eval": "error",
        "@typescript-eslint/no-invalid-this": "error",
        "@typescript-eslint/no-redeclare": "error",
        "@typescript-eslint/no-throw-literal": "error",
        "@typescript-eslint/require-await": "error",
        "@typescript-eslint/no-shadow": "error",
        "@typescript-eslint/brace-style": "error",
        "@typescript-eslint/func-call-spacing": [
          "error",
          "never"
        ],
        "@typescript-eslint/comma-dangle": [
          "error",
          {
            "arrays": "always-multiline",
            "objects": "always-multiline",
            "imports": "never",
            "exports": "never",
            "functions": "never"
          }
        ],
        "@typescript-eslint/comma-spacing": [
          "error",
          {
            "before": false,
            "after": true
          }
        ],
        "@typescript-eslint/no-unused-vars": [
          "error"
        ],
        "@typescript-eslint/no-use-before-define": [
          "error",
          {
            "functions": true,
            "classes": true,
            "variables": true
          }
        ],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "default",
            "format": [
              "camelCase",
              "UPPER_CASE",
              "snake_case"
            ]
          },
          {
            "selector": "enum",
            "format": [
              "UPPER_CASE"
            ]
          },
          {
            "selector": "variable",
            "format": [
              "camelCase",
              "UPPER_CASE"
            ]
          },
          {
            "selector": "parameter",
            "format": [
              "camelCase",
              "UPPER_CASE"
            ],
            "leadingUnderscore": "allow"
          },
          {
            "selector": "memberLike",
            "modifiers": [
              "private"
            ],
            "format": [
              "camelCase",
              "UPPER_CASE"
            ],
            "leadingUnderscore": "require"
          },
          {
            "selector": "typeLike",
            "format": [
              "PascalCase"
            ]
          },
          {
            "selector": [
              "classProperty",
              "objectLiteralProperty",
              "typeProperty",
              "classMethod",
              "objectLiteralMethod",
              "typeMethod",
              "accessor",
              "enumMember"
            ],
            "format": null,
            "modifiers": [
              "requiresQuotes"
            ]
          }
        ]
      }
    },
    {
      "files": [
        "*.html"
      ],
      "extends": [
        "eslint:recommended",
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/recommended"
      ],
      "rules": {}
    }
  ]
}